#
# File: server/deploy/nginx/default.conf
# Copyright: Grimm Project, Ren Pin NGO, all rights reserved.
# License: MIT
# -------------------------------------------------------------------------
# Authors:  Ming Li(adagio.ming@gmail.com)
#
# Description: default nginx server config.
#
# To-Dos:
#   1. make other supplements if needed.
#
# Issues:
#   No issue so far.
#
# Revision History (Date, Editor, Description):
#   1. 2019/08/19, Ming, create first revision.
#

# define nginx cluster in case you might need do load balancing inside cluster
upstream uwsgi_upstream {
    server unix:/var/tmp/uwsgi_grimm_app.sock;
}

# define virtual server
server {
    # first of all, specify a dedicated TCP port for backend.
    listen 18001;
    listen [::]: 18001;

    # static resource root path for nginx to find resources
    #root /var/www/html /home/grimm/run/backend/static /home/grimm/run/backend/templates;
    root /var/www/html;
    # server name, default is localhost
    server_name localhost;
    # specify charset
    charset utf-8;
    # specify maximun upload size
    client_max_body_size 35m;

    # define base location uri behavior
    location / {
        include uwsgi_params;
        #define customized uwsgi params
        #uwsgi_param UWSGI_SCRIPT deploy.uwsgi.wsgi;
        #uwsgi_param UWSGI_CHDIR /home/grimm/run/backend/server;
        uwsgi_pass uwsgi_upstream;

        # redirect to https request
        #proxy_pass https://localhost$request_uri;
    }

    # let nginx handle media resource request
    location /media {
        include uwsgi_params;
        #alias /home/grimm/run/backend/server/media;
        # if media file not found, let wsgi app handle request
        #if(!-f $request_filename) {
            uwsgi_pass uwsgi_upstream;
        #}

        # redirect to https request
        #proxy_pass https://localhost$request_uri;
    }

    # let nginx handle static resource request
    location /static {
        include uwsgi_params;
        #alias /home/grimm/run/backend/server/static;
        # if static file not found, let wsgi app handle request
        #if(!-f $request_filename) {
            uwsgi_pass uwsgi_upstream;
        #}

        # redirect to https request
        #proxy_pass https://localhost$request_uri;
    }
}


include https/*;
