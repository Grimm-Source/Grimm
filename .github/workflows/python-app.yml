# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html
# https://github.com/marketplace/actions/ssh-remote-commands

name: Python application

on:
  push:
    branches: [ backend_v2 ]
  pull_request:
    branches: [ backend_v2 ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.6.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest
    - name: CD
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.JALEN_HOST }}
        USERNAME: ${{ secrets.JALEN_USERNAME }}
        KEY: ${{ secrets.JALEN_SSHKEY }}
        command_timeout: 5m
        PORT: ${{ secrets.JALEN_PORT }}
        script: |
          cd /usr/local/app2/Grimm
          echo 'pull source code'
          git pull https://github.com/Grimm-Source/Grimm.git backend_v2 backend_v2:backend_v2
          source ../venv/bin/activate
          pip install -r requirements.txt
          pid=$(cat /usr/local/app2/Grimm/logs/grimm.pid)
          echo "$pid"
          kill -9 $pid 2>/dev/null
          nohup ./run_grimm.sh >> grimm.out 2>&1 &
